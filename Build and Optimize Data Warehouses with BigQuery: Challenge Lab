
Build and Optimize Data Warehouses with BigQuery: Challenge Lab

###################################################################################################################################################

Task 1: Create a table partitioned by date

bq mk <Dataset Name>  (Run this command in cloud shell)


CREATE OR REPLACE TABLE <Dataset Name>.<Table Name>
PARTITION BY date
OPTIONS(
 partition_expiration_days=<Expiration Days>,
 description="a table partitioned by date"
) AS
SELECT *
FROM `bigquery-public-data.covid19_govt_response.oxford_policy_tracker` 
where 
alpha_3_code !='USA' and alpha_3_code !='GBR' and alpha_3_code!='BRA' and alpha_3_code!='CAN'



###########################################################################################################################################

Task 2: Add new columns to your table

ALTER TABLE <dataset_name>.<table_name>
ADD COLUMN population INT64,
ADD COLUMN country_area FLOAT64,
ADD COLUMN mobility STRUCT<
 avg_retail      FLOAT64,
 avg_grocery     FLOAT64,
 avg_parks       FLOAT64,
 avg_transit     FLOAT64,
 avg_workplace   FLOAT64,
 avg_residential FLOAT64
>


##########################################################################################################################################

Task 3: Add country population data to the population column


UPDATE
  <Dataset Name>.<Table Name> t0
SET
  t0.population = t2.pop_data_2019
FROM
  (SELECT DISTINCT country_territory_code, pop_data_2019 FROM `bigquery-public-data.covid19_ecdc.covid_19_geographic_distribution_worldwide`) AS t2
WHERE t0.alpha_3_code = t2.country_territory_code;


######################################################################################################################################33333

Task 4: Add country area data to the country_area column

UPDATE
 <Dataset Name>.<Table Name> t0
SET
  t0.country_area = t2.country_area
FROM
  (SELECT DISTINCT country_name, country_area FROM
  `bigquery-public-data.census_bureau_international.country_names_area`) AS t2
WHERE t0.country_name = t2.country_name;

##########################################################################################################################################

Task 5: Populate the mobility record data

UPDATE
  <Dataset Name>.<Table Name> t0
SET
  mobility.avg_retail = t2.avg_retail,
  mobility.avg_grocery = t2.avg_grocery,
  mobility.avg_parks = t2.avg_parks,
  mobility.avg_transit = t2.avg_transit,
  mobility.avg_workplace = t2.avg_workplace,
  mobility.avg_residential = t2.avg_residential
FROM 
  <Dataset Name>.<Table Name> t1
  INNER JOIN 
  (
    SELECT country_region, date, 
    AVG(retail_and_recreation_percent_change_from_baseline) as avg_retail,
    AVG(grocery_and_pharmacy_percent_change_from_baseline)  as avg_grocery,
    AVG(parks_percent_change_from_baseline) as avg_parks,
    AVG(transit_stations_percent_change_from_baseline) as avg_transit,
    AVG( workplaces_percent_change_from_baseline ) as avg_workplace,
    AVG( residential_percent_change_from_baseline)  as avg_residential
    FROM `bigquery-public-data.covid19_google_mobility.mobility_report`
    GROUP BY country_region, date
  ) AS t2
   ON t1.country_name = t2.country_region AND t1.date = t2.date
WHERE CONCAT(t0.country_name, t0.date) = CONCAT(t1.country_name, t1.date);



##########################################################################################################################################


Task 6: Query missing data in population & country_area columns



SELECT 
DISTINCT country_name
FROM 
`<Dataset Name>.<Table Name>`
WHERE 
population IS NULL
UNION ALL
SELECT 
   DISTINCT country_name 
FROM 
   `<Dataset Name>.<Table Name>` 
WHERE 
   country_area IS NULL 
GROUP BY 1
ORDER BY 1



===================================================


